3.2.9 (Media Mark)
08aa70f143bf0c06450046332dcc74011d8172c5
o:Sass::Tree::RootNode
:@template"ß.@import "shared";

// NOTE:
// All mixins for the @box spec have been written assuming they'll be fed property values that
// correspond to the standard spec.  Some mixins can be fed values from the @box spec, but don't
// rely on it.  The `legacy-order` mixin will increment the value fed to it because the @box
// `box-ordinal-group` property begins indexing at 1, while the modern `order` property begins
// indexing at 0.

// ---------------------------------------------------------------------- | @flex

// September 2012 Candidate Recommendation (http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/)
// NOTE: FF did not support wrapping until version ??.  Because the `display: flex` property
// is wrapped in a `@supports (flex-wrap: wrap)` block (when $flex-wrap-required or the $wrap
// argument to the `display-flex` mixin is set to `true`), it will Just Work(TM) when support is
// finally added
// Chrome 21 (prefixed)
// Opera 12.1 (unprefixed)
// Firefox 20 (unprefixed)
$flex-support: not -moz, -webkit, not -ms, not -o, not -khtml !default;

// if `true`, `$flex-legacy-enabled` is treated as false and an `@supports` block is added to 
// the display property to hide the standard value from versions of Firefox that support the
// unprefixed properties, but do not support wrapping
// (this includes suppressing the automatic emittion of @box properties)
$flex-wrap-required : false !default;

// ---------------------------------------------------------------------- | @flexbox

// March 2012 Working Draft (http://www.w3.org/TR/2012/WD-css3-flexbox-20120322/)
// Chrome 17 (prefixed)
// Internet Explorer 10 (prefixed)
$flexbox-support: not -moz, -webkit, -ms, not -o, not -khtml, not standard !default;

// ---------------------------------------------------------------------- | @box

// July 2009 Working Draft (http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/)
// NOTE: no browser that implements this spec is known to support `box-lines: multiple`
// Chrome 4? (prefixed)
// Safari 3.1 (prefixed)
// Firefox <20 (prefixed)
$box-support: -moz, -webkit, not -ms, not -o, not -khtml, not standard !default;

// If `true`, the @box properties will be emitted as part of the normal mixin call
// (if this is false, you're still free to explicitly call the legacy mixins yourself)
$flex-legacy-enabled: false !default;

// ====================================================================================================
//                                                                       | Common
// ====================================================================================================

// function for converting a value from the standard specification to one that is comparable from
// an older specification
@function flex-translate-value($value, $version: box) {
	$value: unquote($value);

	@if $value == flex {
		@return if($version == box, box, flexbox);
	} @else if $value == inline-flex {
		@return if($version == box, inline-box, inline-flexbox);
	} @else if $value == flex-start {
		@return start;
	} @else if $value == flex-end {
		@return end;
	} @else if $value == space-between {
		@return justify;
	} @else if $value == space-around { // @box doesn't have a value equivalent to `space-around`
		@return if($version == box, justify, distribute);
	}
	@return $value;
}

@function flex-support-either() {
	$common: ();
	@for $i from 1 through length($flex-support) {
		$common: append($common, nth($flex-support, $i) or nth($flexbox-support, $i), comma);
	}
	@return $common;
}

// ====================================================================================================
//                                                                       | Display Property
// ====================================================================================================

// $type: flex | inline-flex
@mixin display-flex($type: flex, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-display-flex($type);
	}
	
	@include experimental-value(display, flex-translate-value($type, flexbox), $flexbox-support...);
	
	// if `$wrap` is true, then we need to suppress official support as generated by the `experimental()`
	// mixin so that we can insert it inside an `@supports` block
	$flex-support-standard: true;
	$flex-support-list: $flex-support;
	@if length($flex-support) > 5 {
		$flex-support-standard: nth($flex-support, 6);
		// a `slice()` function would really be handy here...
		$flex-support-list: nth($flex-support, 1), nth($flex-support, 2), nth($flex-support, 3), nth($flex-support, 4), nth($flex-support, 5);
	}
	$flex-support-list: append($flex-support-list, if($wrap, false, $flex-support-standard));
	@include experimental-value(display, $type, $flex-support-list...);
	
	@if $wrap and $flex-support-standard {
		@supports (flex-wrap: wrap) {
			display: $type;
		}
	}
}

@mixin legacy-display-flex($type: flex) {
	@include experimental-value(display, flex-translate-value($type, box), $box-support...);
}

// ====================================================================================================
//                                                                       | Flex Container Properties
// ====================================================================================================

// $value: <'flex-direction'> || <'flex-wrap'>
@mixin flex-flow($value: row nowrap, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-flow($value);
	}
	
	@include experimental(flex-flow, $value, flex-support-either()...);
}

@mixin legacy-flex-flow($value: row nowrap) {
	@if length($value) > 1 { // @box version doesn't have a shorthand
		@include legacy-flex-direction(nth($value, 1));
		@include legacy-flex-wrap(nth($value, 2));
	} @else {
		$value: unquote($value);
		@if $value == row or $value == row-reverse or $value == column or $value == column-reverse {
			@include legacy-flex-direction($value);
		} @else {
			@include legacy-flex-wrap($value);
		}
	}
}

// ----------------------------------------------------------------------

// $value: row | row-reverse | column | column-reverse
@mixin flex-direction($value: row, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-direction($value);
	}
	
	@include experimental(flex-direction, $value, flex-support-either()...);
}

@mixin legacy-flex-direction($value: row) {
	$value: unquote($value);
	@include experimental(box-orient, if($value == row or $value == row-reverse, horizontal, vertical), $box-support...);
	@include experimental(box-direction, if($value == row-reverse or $value == column-reverse, reverse, normal), $box-support...);
}

// ----------------------------------------------------------------------

// $value: nowrap | wrap | wrap-reverse
@mixin flex-wrap($value: nowrap, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-wrap($value);
	}
	
	@include experimental(flex-wrap, $value, flex-support-either()...);
}

@mixin legacy-flex-wrap($value: nowrap) {
	// NOTE: @box has no equivalent of wrap-reverse
	@include experimental(box-lines, if($value == nowrap, single, multiple), $box-support...);
}

// ----------------------------------------------------------------------

// Distributing extra space along the "main axis"
// $value: flex-start | flex-end | center | space-between | space-around
@mixin justify-content($value: flex-start, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-justify-content($value);
	}
	
	@include experimental(flex-pack, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(justify-content, $value, $flex-support...);
}

@mixin legacy-justify-content($value: flex-start) {
	@include experimental(box-pack, flex-translate-value($value, box), $box-support...);
}

// ----------------------------------------------------------------------

// Distributing extra space along the "cross axis"
// $value: flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($value: flex-start, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-align-content($value);
	}
	
	@include experimental(flex-line-pack, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-content, $value, $flex-support...);
}

@mixin legacy-align-content($value: flex-start) {
	@include experimental(box-align, flex-translate-value($value, box), $box-support...);
}

// ----------------------------------------------------------------------

// Align items along the "cross axis"
// $value: flex-start | flex-end | center | baseline | stretch
@mixin align-items($value: stretch) { // the flex container
	// There is no @box version of this property
	@include experimental(flex-align, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-items, $value, $flex-support...);
}

// ====================================================================================================
//                                                                       | Flex Item Properties
// ====================================================================================================

// $value: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
@mixin flex($value: 0 1 auto, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	$value: unquote($value);
	@if $legacy and unitless(nth($value, 1)) {
		// @box version does not have a shorthand, see `legacy-flex-grow`
		@include legacy-flex-grow(nth($value, 1));
	}
	
	@include experimental(flex, $value, flex-support-either()...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin flex-grow($value: 0, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-flex-grow($value);
	}
	
	// There is no @flexbox version of this property
	@include experimental(flex-grow, $value, $flex-support...);
}

@mixin legacy-flex-grow($value: 0) {
	@include experimental(box-flex, $value, $box-support...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin flex-shrink($value: 1) {
	// There is no @box version of this property
	// There is no @flexbox version of this property
	@include experimental(flex-shrink, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// $value: united number (eg: 100px)
@mixin flex-basis($value: auto) {
	// There is no @box version of this property
	// There is no @flexbox version of this property
	@include experimental(flex-basis, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// Align items along the "cross axis" -- overrides `align-items` value on individual items
// $value: auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($value: auto) { // children of flex containers
	// There is no @box version of this property
	@include experimental(flex-item-align, flex-translate-value($value, flexbox), $flexbox-support...);
	@include experimental(align-self, $value, $flex-support...);
}

// ----------------------------------------------------------------------

// $value: Integer
@mixin order($value: 0, $wrap: $flex-wrap-required, $legacy: $flex-legacy-enabled) {
	@if $legacy and not $wrap {
		@include legacy-order($value);
	}
	
	@include experimental(flex-order, $value, $flexbox-support...);
	@include experimental(order, $value, $flex-support...);
}

@mixin legacy-order($value: 0) {
	// the @box spec starts the ordering at 1 instead of 0 like the modern specs
	@include experimental(box-ordinal-group, $value + 1, $box-support...);
}
:@has_childrenT:@options{ :@children[Go:Sass::Tree::ImportNode:@imported_file0:@imported_filename"shared;0;@;	[ :
@lineio:Sass::Tree::CommentNode
:
@type:silent:@value["/* NOTE:
 * All mixins for the @box spec have been written assuming they'll be fed property values that
 * correspond to the standard spec.  Some mixins can be fed values from the @box spec, but don't
 * rely on it.  The `legacy-order` mixin will increment the value fed to it because the @box
 * `box-ordinal-group` property begins indexing at 1, while the modern `order` property begins
 * indexing at 0. */;@;	[ ;io;
;;;["Y/* ---------------------------------------------------------------------- | @flex */;@;	[ ;io;
;;;["Þ/* September 2012 Candidate Recommendation (http://www.w3.org/TR/2012/CR-css3-flexbox-20120918/)
 * NOTE: FF did not support wrapping until version ??.  Because the `display: flex` property
 * is wrapped in a `@supports (flex-wrap: wrap)` block (when $flex-wrap-required or the $wrap
 * argument to the `display-flex` mixin is set to `true`), it will Just Work(TM) when support is
 * finally added
 * Chrome 21 (prefixed)
 * Opera 12.1 (unprefixed)
 * Firefox 20 (unprefixed) */;@;	[ ;io:Sass::Tree::VariableNode:@guarded"!default:
@name"flex-support:
@expro:Sass::Script::List	;[
o:!Sass::Script::UnaryOperation	:@operando:Sass::Script::String	;:identifier;"	-moz;@;i:@operator:not;@;io;	;;;"-webkit;@;io;	;o;	;;;"-ms;@;i;;;@;io;	;o;	;;;"-o;@;i;;;@;io;	;o;	;;;"-khtml;@;i;;;@;i;@;i:@separator:
comma;@;	[ ;io;
;;;["=/* if `true`, `$flex-legacy-enabled` is treated as false and an `@supports` block is added to 
 * the display property to hide the standard value from versions of Firefox that support the
 * unprefixed properties, but do not support wrapping
 * (this includes suppressing the automatic emittion of @box properties) */;@;	[ ;io;;"!default;"flex-wrap-required;o:Sass::Script::Bool;F;@;i;@;	[ ;io;
;;;["\/* ---------------------------------------------------------------------- | @flexbox */;@;	[ ;i!o;
;;;["/* March 2012 Working Draft (http://www.w3.org/TR/2012/WD-css3-flexbox-20120322/)
 * Chrome 17 (prefixed)
 * Internet Explorer 10 (prefixed) */;@;	[ ;i#o;;"!default;"flexbox-support;o;	;[o;	;o;	;;;"	-moz;@;i&;;;@;i&o;	;;;"-webkit;@;i&o;	;;;"-ms;@;i&o;	;o;	;;;"-o;@;i&;;;@;i&o;	;o;	;;;"-khtml;@;i&;;;@;i&o;	;o;	;;;"standard;@;i&;;;@;i&;@;i&;;;@;	[ ;i&o;
;;;["X/* ---------------------------------------------------------------------- | @box */;@;	[ ;i(o;
;;;["ö/* July 2009 Working Draft (http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/)
 * NOTE: no browser that implements this spec is known to support `box-lines: multiple`
 * Chrome 4? (prefixed)
 * Safari 3.1 (prefixed)
 * Firefox <20 (prefixed) */;@;	[ ;i*o;;"!default;"box-support;o;	;[o;	;;;"	-moz;@;i/o;	;;;"-webkit;@;i/o;	;o;	;;;"-ms;@;i/;;;@;i/o;	;o;	;;;"-o;@;i/;;;@;i/o;	;o;	;;;"-khtml;@;i/;;;@;i/o;	;o;	;;;"standard;@;i/;;;@;i/;@;i/;;;@;	[ ;i/o;
;;;["¬/* If `true`, the @box properties will be emitted as part of the normal mixin call
 * (if this is false, you're still free to explicitly call the legacy mixins yourself) */;@;	[ ;i1o;;"!default;"flex-legacy-enabled;o;;F;@;i3;@;	[ ;i3o;
;;;["$/* ====================================================================================================
 *                                                                       | Common
 * ==================================================================================================== */;@;	[ ;i5o;
;;;["~/* function for converting a value from the standard specification to one that is comparable from
 * an older specification */;@;	[ ;i9o:Sass::Tree::FunctionNode;"flex-translate-value;T;@;	[o;;0;"
value;o:Sass::Script::Funcall;"unquote:@keywords{ ;@:@splat0;i<:
@args[o:Sass::Script::Variable	;"
value;@;i<:@underscored_name"
value;@;	[ ;i<u:Sass::Tree::IfNodee
[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:@options{ :
@linei>:@underscored_name"
value:@operator:eq;	@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"	flex;	@	;
i>;
i>u:Sass::Tree::IfNodel[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:@options{ :
@linei@:@underscored_name"
value:@operator:eq;	@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"inline-flex;	@	;
i@;
i@u:Sass::Tree::IfNode^[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:@options{ :
@lineiB:@underscored_name"
value:@operator:eq;	@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"flex-start;	@	;
iB;
iBu:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:@options{ :
@lineiD:@underscored_name"
value:@operator:eq;	@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"flex-end;	@	;
iD;
iDu:Sass::Tree::IfNode¼[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:@options{ :
@lineiF:@underscored_name"
value:@operator:eq;	@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"space-between;	@	;
iF;
iFu:Sass::Tree::IfNoded[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"
value:@options{ :
@lineiH:@underscored_name"
value:@operator:eq;	@	:@operand2o:Sass::Script::String	:
@type:identifier:@value"space-around;	@	;
iH;
iH0[o:Sass::Tree::CommentNode
;:silent;["A/* @box doesn't have a value equivalent to `space-around` */;	@	:@children[ ;
iHo:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Funcall;"if:@keywords{ ;	@	:@splat0;
iI:
@args[o; 
;o;	;"version;	@	;
iI;"version;;;	@	;o;	;;;"box;	@	;
iI;
iIo;	;;;"justify;	@	;
iIo;	;;;"distribute;	@	;
iI;	@	;[ ;
iI[o:Sass::Tree::ReturnNode	:
@expro;	;;;"justify;	@	;
iG;	@	:@children[ ;
iG[o:Sass::Tree::ReturnNode	:
@expro;	;;;"end;	@	;
iE;	@	:@children[ ;
iE[o:Sass::Tree::ReturnNode	:
@expro;	;;;"
start;	@	;
iC;	@	:@children[ ;
iC[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Funcall;"if:@keywords{ ;	@	:@splat0;
iA:
@args[o; 
;o;	;"version;	@	;
iA;"version;;;	@	;o;	;;;"box;	@	;
iA;
iAo;	;;;"inline-box;	@	;
iAo;	;;;"inline-flexbox;	@	;
iA;	@	:@children[ ;
iA[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Funcall;"if:@keywords{ ;	@	:@splat0;
i?:
@args[o; 
;o;	;"version;	@	;
i?;"version;;;	@	;o;	;;;"box;	@	;
i?;
i?o;	;;;"box;	@	;
i?o;	;;;"flexbox;	@	;
i?;	@	:@children[ ;
i?o:Sass::Tree::ReturnNode	;o;%	;"
value;@;iK;&"
value;@;	[ ;iK;#0;i;;$[[o;%;"
value;@;&"
value0[o;%;"version;@;&"versiono;	;;;"box;@;i;o; ;"flex-support-either;T;@;	[o;;0;"common;o;	;[ ;@;iO;:
space;@;	[ ;iOo:Sass::Tree::ForNode:@exclusiveF:
@fromo:Sass::Script::Number:@denominator_units[ :@numerator_units[ ;i;@:@original"1;iP;T;@:	@var"i;	[o;;0;"common;o;!;"append;"{ ;@;#0;iQ;$[o;%	;"common;@;iQ;&"commono:Sass::Script::Operation
:@operand1o;!;"nth;"{ ;@;#0;iQ;$[o;%	;"flex-support;@;iQ;&"flex_supporto;%	;"i;@;iQ;&"i;:or;@:@operand2o;!;"nth;"{ ;@;#0;iQ;$[o;%	;"flexbox-support;@;iQ;&"flexbox_supporto;%	;"i;@;iQ;&"i;iQo;	;;;"
comma;@;iQ;@;	[ ;iQ:@too;!;"length;"{ ;@;#0;iP;$[o;%	;"flex-support;@;iP;&"flex_support;iPo;(	;o;%	;"common;@;iS;&"common;@;	[ ;iS;#0;iN;$[ o;
;;;["./* ====================================================================================================
 *                                                                       | Display Property
 * ==================================================================================================== */;@;	[ ;iVo;
;;;["$/* $type: flex | inline-flex */;@;	[ ;iZo:Sass::Tree::MixinDefNode;"display-flex;T;@;	[u;'~[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:@options{ :
@linei\:@underscored_name"legacy:@operator:and;	@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	@	;
i\;"	wrap;:not;	@	;
i\;
i\0[o:Sass::Tree::MixinNode;"legacy-display-flex:@keywords{ ;	@	:@children[ :@splat0;
i]:
@args[o;	;"	type;	@	;
i];"	typeo:Sass::Tree::MixinNode;"experimental-value;"{ ;@;	[ ;#o;%	;"flexbox-support;{ ;i`;&"flexbox_support;i`;$[o;	;;;"display;@;i`o;!;"flex-translate-value;"{ ;@;#0;i`;$[o;%	;"	type;@;i`;&"	typeo;	;;;"flexbox;@;i`o;
;;;["¦/* if `$wrap` is true, then we need to suppress official support as generated by the `experimental()`
 * mixin so that we can insert it inside an `@supports` block */;@;	[ ;ibo;;0;"flex-support-standard;o;;T;@;id;@;	[ ;ido;;0;"flex-support-list;o;%	;"flex-support;@;ie;&"flex_support;@;	[ ;ieu;'ù[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"length:@keywords{ :@options{ :@splat0:
@lineif:
@args[o:Sass::Script::Variable	;"flex-support;
@
;if:@underscored_name"flex_support:@operator:gt;
@
:@operand2o:Sass::Script::Number:@denominator_units[ :@numerator_units[ :@valuei
;
@
:@original"5;if;if0[o:Sass::Tree::VariableNode:@guarded0;"flex-support-standard:
@expro;;"nth;	{ ;
@
;0;ig;[o;	;"flex-support;
@
;ig;"flex_supporto;;@;[ ;i;
@
;"6;ig;
@
:@children[ ;igo:Sass::Tree::CommentNode
:
@type:silent;["=/* a `slice()` function would really be handy here... */;
@
;[ ;iho;;0;"flex-support-list;o:Sass::Script::List	;[
o;;"nth;	{ ;
@
;0;ii;[o;	;"flex-support;
@
;ii;"flex_supporto;;@;[ ;i;
@
;"1;iio;;"nth;	{ ;
@
;0;ii;[o;	;"flex-support;
@
;ii;"flex_supporto;;@;[ ;i;
@
;"2;iio;;"nth;	{ ;
@
;0;ii;[o;	;"flex-support;
@
;ii;"flex_supporto;;@;[ ;i;
@
;"3;iio;;"nth;	{ ;
@
;0;ii;[o;	;"flex-support;
@
;ii;"flex_supporto;;@;[ ;i	;
@
;"4;iio;;"nth;	{ ;
@
;0;ii;[o;	;"flex-support;
@
;ii;"flex_supporto;;@;[ ;i
;
@
;"5;ii;
@
;ii:@separator:
comma;
@
;[ ;iio;;0;"flex-support-list;o;!;"append;"{ ;@;#0;ik;$[o;%	;"flex-support-list;@;ik;&"flex_support_listo;!;"if;"{ ;@;#0;ik;$[o;%	;"	wrap;@;ik;&"	wrapo;;F;@;iko;%	;"flex-support-standard;@;ik;&"flex_support_standard;@;	[ ;iko;8;"experimental-value;"{ ;@;	[ ;#o;%	;"flex-support-list;{ ;il;&"flex_support_list;il;$[o;	;;;"display;@;ilo;%	;"	type;@;il;&"	typeu;'0[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"	wrap:@options{ :
@linein:@underscored_name"	wrap:@operator:and;	@	:@operand2o;	;"flex-support-standard;	@	;
in;"flex_support_standard;
in0[o:Sass::Tree::SupportsNode;"supports:@has_childrenT:@value" ;	@	:
@tabsi :@conditiono: Sass::Supports::Declaration;o:Sass::Script::String	:
@type:identifier;"flex-wrap;	@	;
io;o;	;;;"	wrap;	@	;
io:@children[o:Sass::Tree::PropNode;["display;o;	;"	type;	@	;
ip;"	type:@prop_syntax:new;	@	;i ;[ ;
ip;
io;#0;i[;$[[o;%;"	type;@;&"	typeo;	;;;"	flex;@;i[[o;%;"	wrap;@;&"	wrapo;%	;"flex-wrap-required;@;i[;&"flex_wrap_required[o;%;"legacy;@;&"legacyo;%	;"flex-legacy-enabled;@;i[;&"flex_legacy_enabledo;7;"legacy-display-flex;T;@;	[o;8;"experimental-value;"{ ;@;	[ ;#o;%	;"box-support;{ ;iv;&"box_support;iv;$[o;	;;;"display;@;ivo;!;"flex-translate-value;"{ ;@;#0;iv;$[o;%	;"	type;@;iv;&"	typeo;	;;;"box;@;iv;#0;iu;$[[o;%;"	type;@;&"	typeo;	;;;"	flex;@;iuo;
;;;["7/* ====================================================================================================
 *                                                                       | Flex Container Properties
 * ==================================================================================================== */;@;	[ ;iyo;
;;;["6/* $value: <'flex-direction'> || <'flex-wrap'> */;@;	[ ;i}o;7;"flex-flow;T;@;	[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:@options{ :
@linei:@underscored_name"legacy:@operator:and;	@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	@	;
i;"	wrap;:not;	@	;
i;
i0[o:Sass::Tree::MixinNode;"legacy-flex-flow:@keywords{ ;	@	:@children[ :@splat0;
i{:
@args[o;	;"
value;	@	;
i{;"
valueo;8;"experimental;"{ ;@;	[ ;#o;!;"flex-support-either;"{ ;{ ;#0;i~;$[ ;i~;$[o;	;;;"flex-flow;@;i~o;%	;"
value;@;i~;&"
value;#0;i~;$[[o;%;"
value;@;&"
valueo;	;[o;	;;;"row;@;i~o;	;;;"nowrap;@;i~;@;i~;;)[o;%;"	wrap;@;&"	wrapo;%	;"flex-wrap-required;@;i~;&"flex_wrap_required[o;%;"legacy;@;&"legacyo;%	;"flex-legacy-enabled;@;i~;&"flex_legacy_enabledo;7;"legacy-flex-flow;T;@;	[u;'£[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@name"length:@keywords{ :@options{ :@splat0:
@linei:
@args[o:Sass::Script::Variable	;"
value;
@
;i:@underscored_name"
value:@operator:gt;
@
:@operand2o:Sass::Script::Number:@denominator_units[ :@numerator_units[ :@valuei;
@
:@original"1;i;iu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:@guarded0:
@name"
value:
@expro:Sass::Script::Funcall;"unquote:@keywords{ :@options{ :@splat0:
@linei:
@args[o:Sass::Script::Variable	;"
value;@;i:@underscored_name"
value;@:@children[ ;iu:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operand1o; 
;o; 
;o; 
;o:Sass::Script::Variable	:
@name"
value:@options{ :
@linei:@underscored_name"
value:@operator:eq;	@:@operand2o:Sass::Script::String	:
@type:identifier:@value"row;	@;
i;
i;:or;	@;o; 
;o;	;"
value;	@;
i;"
value;;;	@;o;	;;;"row-reverse;	@;
i;
i;
i;;;	@;o; 
;o;	;"
value;	@;
i;"
value;;;	@;o;	;;;"column;	@;
i;
i;
i;;;	@;o; 
;o;	;"
value;	@;
i;"
value;;;	@;o;	;;;"column-reverse;	@;
i;
i;
iu:Sass::Tree::IfNodeÂ[00[o:Sass::Tree::MixinNode:
@name"legacy-flex-wrap:@keywords{ :@options{ :@children[ :@splat0:
@linei:
@args[o:Sass::Script::Variable	;"
value;@
;i:@underscored_name"
value[o:Sass::Tree::MixinNode;"legacy-flex-direction:@keywords{ ;	@:@children[ :@splat0;
i:
@args[o;	;"
value;	@;
i;"
value[o:Sass::Tree::CommentNode
:
@type:silent;["0/* @box version doesn't have a shorthand */;
@
:@children[ ;io:Sass::Tree::MixinNode;"legacy-flex-direction;	{ ;
@
;[ ;0;i;[o;;"nth;	{ ;
@
;0;i;[o;	;"
value;
@
;i;"
valueo;;@;[ ;i;
@
;"1;io;;"legacy-flex-wrap;	{ ;
@
;[ ;0;i;[o;;"nth;	{ ;
@
;0;i;[o;	;"
value;
@
;i;"
valueo;;@;[ ;i;
@
;"2;i;#0;i;$[[o;%;"
value;@;&"
valueo;	;[o;	;;;"row;@;io;	;;;"nowrap;@;i;@;i;;)o;
;;;["Q/* ---------------------------------------------------------------------- */;@;	[ ;io;
;;;[">/* $value: row | row-reverse | column | column-reverse */;@;	[ ;io;7;"flex-direction;T;@;	[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:@options{ :
@linei:@underscored_name"legacy:@operator:and;	@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	@	;
i;"	wrap;:not;	@	;
i;
i0[o:Sass::Tree::MixinNode;"legacy-flex-direction:@keywords{ ;	@	:@children[ :@splat0;
i:
@args[o;	;"
value;	@	;
i;"
valueo;8;"experimental;"{ ;@;	[ ;#o;!;"flex-support-either;"{ ;{ ;#0;i;$[ ;i;$[o;	;;;"flex-direction;@;io;%	;"
value;@;i;&"
value;#0;i;$[[o;%;"
value;@;&"
valueo;	;;;"row;@;i[o;%;"	wrap;@;&"	wrapo;%	;"flex-wrap-required;@;i;&"flex_wrap_required[o;%;"legacy;@;&"legacyo;%	;"flex-legacy-enabled;@;i;&"flex_legacy_enabledo;7;"legacy-flex-direction;T;@;	[o;;0;"
value;o;!;"unquote;"{ ;@;#0;i;$[o;%	;"
value;@;i;&"
value;@;	[ ;io;8;"experimental;"{ ;@;	[ ;#o;%	;"box-support;{ ;i;&"box_support;i;$[o;	;;;"box-orient;@;io;!;"if;"{ ;@;#0;i;$[o;2
;3o;2
;3o;%	;"
value;@;i;&"
value;:eq;@;5o;	;;;"row;@;i;i;;4;@;5o;2
;3o;%	;"
value;@;i;&"
value;;9;@;5o;	;;;"row-reverse;@;i;i;io;	;;;"horizontal;@;io;	;;;"vertical;@;io;8;"experimental;"{ ;@;	[ ;#o;%	;"box-support;{ ;i;&"box_support;i;$[o;	;;;"box-direction;@;io;!;"if;"{ ;@;#0;i;$[o;2
;3o;2
;3o;%	;"
value;@;i;&"
value;;9;@;5o;	;;;"row-reverse;@;i;i;;4;@;5o;2
;3o;%	;"
value;@;i;&"
value;;9;@;5o;	;;;"column-reverse;@;i;i;io;	;;;"reverse;@;io;	;;;"normal;@;i;#0;i;$[[o;%;"
value;@;&"
valueo;	;;;"row;@;io;
;;;["Q/* ---------------------------------------------------------------------- */;@;	[ ;i o;
;;;["//* $value: nowrap | wrap | wrap-reverse */;@;	[ ;i¢o;7;"flex-wrap;T;@;	[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:@options{ :
@linei¤:@underscored_name"legacy:@operator:and;	@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	@	;
i¤;"	wrap;:not;	@	;
i¤;
i¤0[o:Sass::Tree::MixinNode;"legacy-flex-wrap:@keywords{ ;	@	:@children[ :@splat0;
i¥:
@args[o;	;"
value;	@	;
i¥;"
valueo;8;"experimental;"{ ;@;	[ ;#o;!;"flex-support-either;"{ ;{ ;#0;i¨;$[ ;i¨;$[o;	;;;"flex-wrap;@;i¨o;%	;"
value;@;i¨;&"
value;#0;i£;$[[o;%;"
value;@;&"
valueo;	;;;"nowrap;@;i£[o;%;"	wrap;@;&"	wrapo;%	;"flex-wrap-required;@;i£;&"flex_wrap_required[o;%;"legacy;@;&"legacyo;%	;"flex-legacy-enabled;@;i£;&"flex_legacy_enabledo;7;"legacy-flex-wrap;T;@;	[o;
;;;["7/* NOTE: @box has no equivalent of wrap-reverse */;@;	[ ;i¬o;8;"experimental;"{ ;@;	[ ;#o;%	;"box-support;{ ;i­;&"box_support;i­;$[o;	;;;"box-lines;@;i­o;!;"if;"{ ;@;#0;i­;$[o;2
;3o;%	;"
value;@;i­;&"
value;;9;@;5o;	;;;"nowrap;@;i­;i­o;	;;;"single;@;i­o;	;;;"multiple;@;i­;#0;i«;$[[o;%;"
value;@;&"
valueo;	;;;"nowrap;@;i«o;
;;;["Q/* ---------------------------------------------------------------------- */;@;	[ ;i°o;
;;;["}/* Distributing extra space along the "main axis"
 * $value: flex-start | flex-end | center | space-between | space-around */;@;	[ ;i²o;7;"justify-content;T;@;	[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:@options{ :
@lineiµ:@underscored_name"legacy:@operator:and;	@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	@	;
iµ;"	wrap;:not;	@	;
iµ;
iµ0[o:Sass::Tree::MixinNode;"legacy-justify-content:@keywords{ ;	@	:@children[ :@splat0;
i¶:
@args[o;	;"
value;	@	;
i¶;"
valueo;8;"experimental;"{ ;@;	[ ;#o;%	;"flexbox-support;{ ;i¹;&"flexbox_support;i¹;$[o;	;;;"flex-pack;@;i¹o;!;"flex-translate-value;"{ ;@;#0;i¹;$[o;%	;"
value;@;i¹;&"
valueo;	;;;"flexbox;@;i¹o;8;"experimental;"{ ;@;	[ ;#o;%	;"flex-support;{ ;iº;&"flex_support;iº;$[o;	;;;"justify-content;@;iºo;%	;"
value;@;iº;&"
value;#0;i´;$[[o;%;"
value;@;&"
valueo;	;;;"flex-start;@;i´[o;%;"	wrap;@;&"	wrapo;%	;"flex-wrap-required;@;i´;&"flex_wrap_required[o;%;"legacy;@;&"legacyo;%	;"flex-legacy-enabled;@;i´;&"flex_legacy_enabledo;7;"legacy-justify-content;T;@;	[o;8;"experimental;"{ ;@;	[ ;#o;%	;"box-support;{ ;i¾;&"box_support;i¾;$[o;	;;;"box-pack;@;i¾o;!;"flex-translate-value;"{ ;@;#0;i¾;$[o;%	;"
value;@;i¾;&"
valueo;	;;;"box;@;i¾;#0;i½;$[[o;%;"
value;@;&"
valueo;	;;;"flex-start;@;i½o;
;;;["Q/* ---------------------------------------------------------------------- */;@;	[ ;iÁo;
;;;["/* Distributing extra space along the "cross axis"
 * $value: flex-start | flex-end | center | space-between | space-around | stretch */;@;	[ ;iÃo;7;"align-content;T;@;	[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:@options{ :
@lineiÆ:@underscored_name"legacy:@operator:and;	@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	@	;
iÆ;"	wrap;:not;	@	;
iÆ;
iÆ0[o:Sass::Tree::MixinNode;"legacy-align-content:@keywords{ ;	@	:@children[ :@splat0;
iÇ:
@args[o;	;"
value;	@	;
iÇ;"
valueo;8;"experimental;"{ ;@;	[ ;#o;%	;"flexbox-support;{ ;iÊ;&"flexbox_support;iÊ;$[o;	;;;"flex-line-pack;@;iÊo;!;"flex-translate-value;"{ ;@;#0;iÊ;$[o;%	;"
value;@;iÊ;&"
valueo;	;;;"flexbox;@;iÊo;8;"experimental;"{ ;@;	[ ;#o;%	;"flex-support;{ ;iË;&"flex_support;iË;$[o;	;;;"align-content;@;iËo;%	;"
value;@;iË;&"
value;#0;iÅ;$[[o;%;"
value;@;&"
valueo;	;;;"flex-start;@;iÅ[o;%;"	wrap;@;&"	wrapo;%	;"flex-wrap-required;@;iÅ;&"flex_wrap_required[o;%;"legacy;@;&"legacyo;%	;"flex-legacy-enabled;@;iÅ;&"flex_legacy_enabledo;7;"legacy-align-content;T;@;	[o;8;"experimental;"{ ;@;	[ ;#o;%	;"box-support;{ ;iÏ;&"box_support;iÏ;$[o;	;;;"box-align;@;iÏo;!;"flex-translate-value;"{ ;@;#0;iÏ;$[o;%	;"
value;@;iÏ;&"
valueo;	;;;"box;@;iÏ;#0;iÎ;$[[o;%;"
value;@;&"
valueo;	;;;"flex-start;@;iÎo;
;;;["Q/* ---------------------------------------------------------------------- */;@;	[ ;iÒo;
;;;["l/* Align items along the "cross axis"
 * $value: flex-start | flex-end | center | baseline | stretch */;@;	[ ;iÔo;7;"align-items;T;@;	[o;
;;;["J/* the flex container
 * There is no @box version of this property */;@;	[ ;iÖo;8;"experimental;"{ ;@;	[ ;#o;%	;"flexbox-support;{ ;iØ;&"flexbox_support;iØ;$[o;	;;;"flex-align;@;iØo;!;"flex-translate-value;"{ ;@;#0;iØ;$[o;%	;"
value;@;iØ;&"
valueo;	;;;"flexbox;@;iØo;8;"experimental;"{ ;@;	[ ;#o;%	;"flex-support;{ ;iÙ;&"flex_support;iÙ;$[o;	;;;"align-items;@;iÙo;%	;"
value;@;iÙ;&"
value;#0;iÖ;$[[o;%;"
value;@;&"
valueo;	;;;"stretch;@;iÖo;
;;;["2/* ====================================================================================================
 *                                                                       | Flex Item Properties
 * ==================================================================================================== */;@;	[ ;iÜo;
;;;["N/* $value: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ] */;@;	[ ;iào;7;"	flex;T;@;	[o;;0;"
value;o;!;"unquote;"{ ;@;#0;iâ;$[o;%	;"
value;@;iâ;&"
value;@;	[ ;iâu;'Ä[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:@options{ :
@lineiã:@underscored_name"legacy:@operator:and;	@	:@operand2o:Sass::Script::Funcall;"unitless:@keywords{ ;	@	:@splat0;
iã:
@args[o;;"nth;{ ;	@	;0;
iã;[o;	;"
value;	@	;
iã;"
valueo:Sass::Script::Number:@denominator_units[ :@numerator_units[ :@valuei;	@	:@original"1;
iã;
iã0[o:Sass::Tree::CommentNode
:
@type:silent;["I/* @box version does not have a shorthand, see `legacy-flex-grow` */;	@	:@children[ ;
iäo:Sass::Tree::MixinNode;"legacy-flex-grow;{ ;	@	;[ ;0;
iå;[o;;"nth;{ ;	@	;0;
iå;[o;	;"
value;	@	;
iå;"
valueo;;@;[ ;i;	@	;"1;
iåo;8;"experimental;"{ ;@;	[ ;#o;!;"flex-support-either;"{ ;{ ;#0;iè;$[ ;iè;$[o;	;;;"	flex;@;ièo;%	;"
value;@;iè;&"
value;#0;iá;$[[o;%;"
value;@;&"
valueo;	;[o;-;.@¥;/[ ;i ;@;0"0;iáo;-;.@¥;/[ ;i;@;0"1;iáo;	;;;"	auto;@;iá;@;iá;;)[o;%;"	wrap;@;&"	wrapo;%	;"flex-wrap-required;@;iá;&"flex_wrap_required[o;%;"legacy;@;&"legacyo;%	;"flex-legacy-enabled;@;iá;&"flex_legacy_enabledo;
;;;["Q/* ---------------------------------------------------------------------- */;@;	[ ;iëo;
;;;["/* $value: Integer */;@;	[ ;iío;7;"flex-grow;T;@;	[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:@options{ :
@lineiï:@underscored_name"legacy:@operator:and;	@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	@	;
iï;"	wrap;:not;	@	;
iï;
iï0[o:Sass::Tree::MixinNode;"legacy-flex-grow:@keywords{ ;	@	:@children[ :@splat0;
ið:
@args[o;	;"
value;	@	;
ið;"
valueo;
;;;["8/* There is no @flexbox version of this property */;@;	[ ;ióo;8;"experimental;"{ ;@;	[ ;#o;%	;"flex-support;{ ;iô;&"flex_support;iô;$[o;	;;;"flex-grow;@;iôo;%	;"
value;@;iô;&"
value;#0;iî;$[[o;%;"
value;@;&"
valueo;-;.@¥;/[ ;i ;@;0"0;iî[o;%;"	wrap;@;&"	wrapo;%	;"flex-wrap-required;@;iî;&"flex_wrap_required[o;%;"legacy;@;&"legacyo;%	;"flex-legacy-enabled;@;iî;&"flex_legacy_enabledo;7;"legacy-flex-grow;T;@;	[o;8;"experimental;"{ ;@;	[ ;#o;%	;"box-support;{ ;iø;&"box_support;iø;$[o;	;;;"box-flex;@;iøo;%	;"
value;@;iø;&"
value;#0;i÷;$[[o;%;"
value;@;&"
valueo;-;.@¥;/[ ;i ;@;0"0;i÷o;
;;;["Q/* ---------------------------------------------------------------------- */;@;	[ ;iûo;
;;;["/* $value: Integer */;@;	[ ;iýo;7;"flex-shrink;T;@;	[o;
;;;["e/* There is no @box version of this property
 * There is no @flexbox version of this property */;@;	[ ;iÿo;8;"experimental;"{ ;@;	[ ;#o;%	;"flex-support;{ ;i;&"flex_support;i;$[o;	;;;"flex-shrink;@;io;%	;"
value;@;i;&"
value;#0;iþ;$[[o;%;"
value;@;&"
valueo;-;.@¥;/[ ;i;@;0"1;iþo;
;;;["Q/* ---------------------------------------------------------------------- */;@;	[ ;io;
;;;[",/* $value: united number (eg: 100px) */;@;	[ ;io;7;"flex-basis;T;@;	[o;
;;;["e/* There is no @box version of this property
 * There is no @flexbox version of this property */;@;	[ ;io;8;"experimental;"{ ;@;	[ ;#o;%	;"flex-support;{ ;i
;&"flex_support;i
;$[o;	;;;"flex-basis;@;i
o;%	;"
value;@;i
;&"
value;#0;i;$[[o;%;"
value;@;&"
valueo;	;;;"	auto;@;io;
;;;["Q/* ---------------------------------------------------------------------- */;@;	[ ;io;
;;;["£/* Align items along the "cross axis" -- overrides `align-items` value on individual items
 * $value: auto | flex-start | flex-end | center | baseline | stretch */;@;	[ ;io;7;"align-self;T;@;	[o;
;;;["S/* children of flex containers
 * There is no @box version of this property */;@;	[ ;io;8;"experimental;"{ ;@;	[ ;#o;%	;"flexbox-support;{ ;i;&"flexbox_support;i;$[o;	;;;"flex-item-align;@;io;!;"flex-translate-value;"{ ;@;#0;i;$[o;%	;"
value;@;i;&"
valueo;	;;;"flexbox;@;io;8;"experimental;"{ ;@;	[ ;#o;%	;"flex-support;{ ;i;&"flex_support;i;$[o;	;;;"align-self;@;io;%	;"
value;@;i;&"
value;#0;i;$[[o;%;"
value;@;&"
valueo;	;;;"	auto;@;io;
;;;["Q/* ---------------------------------------------------------------------- */;@;	[ ;io;
;;;["/* $value: Integer */;@;	[ ;io;7;"
order;T;@;	[u;'[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:
@name"legacy:@options{ :
@linei:@underscored_name"legacy:@operator:and;	@	:@operand2o:!Sass::Script::UnaryOperation	:@operando;	;"	wrap;	@	;
i;"	wrap;:not;	@	;
i;
i0[o:Sass::Tree::MixinNode;"legacy-order:@keywords{ ;	@	:@children[ :@splat0;
i:
@args[o;	;"
value;	@	;
i;"
valueo;8;"experimental;"{ ;@;	[ ;#o;%	;"flexbox-support;{ ;i;&"flexbox_support;i;$[o;	;;;"flex-order;@;io;%	;"
value;@;i;&"
valueo;8;"experimental;"{ ;@;	[ ;#o;%	;"flex-support;{ ;i ;&"flex_support;i ;$[o;	;;;"
order;@;i o;%	;"
value;@;i ;&"
value;#0;i;$[[o;%;"
value;@;&"
valueo;-;.@¥;/[ ;i ;@;0"0;i[o;%;"	wrap;@;&"	wrapo;%	;"flex-wrap-required;@;i;&"flex_wrap_required[o;%;"legacy;@;&"legacyo;%	;"flex-legacy-enabled;@;i;&"flex_legacy_enabledo;7;"legacy-order;T;@;	[o;
;;;["T/* the @box spec starts the ordering at 1 instead of 0 like the modern specs */;@;	[ ;i$o;8;"experimental;"{ ;@;	[ ;#o;%	;"box-support;{ ;i%;&"box_support;i%;$[o;	;;;"box-ordinal-group;@;i%o;2
;3o;%	;"
value;@;i%;&"
value;:	plus;@;5o;-;.@¥;/[ ;i;@;0"1;i%;i%;#0;i#;$[[o;%;"
value;@;&"
valueo;-;.@¥;/[ ;i ;@;0"0;i#;i